<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>アクセシビリティ on Orangebomb</title>
    <link>https://blog.orangebomb.org/tags/%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B7%E3%83%93%E3%83%AA%E3%83%86%E3%82%A3/</link>
    <description>Recent content in アクセシビリティ on Orangebomb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 13 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.orangebomb.org/tags/%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B7%E3%83%93%E3%83%AA%E3%83%86%E3%82%A3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>インクルーシブ本の査読させていただいたら興奮した話</title>
      <link>https://blog.orangebomb.org/blog/2017/10/13/inclusive-design-patterns/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.orangebomb.org/blog/2017/10/13/inclusive-design-patterns/</guid>
      <description>Heydon Pickeringさん（@heydonworks） による著書 Inclusive Design Patterns の日本語化+充実の訳注付き版が インクルーシブHTML+CSS &amp;amp; JavaScript 多様なユーザーニーズに応えるフロントエンドデザインパターン として発売されます。
監訳はデザイニングWebアクセシビリティ - アクセシブルな設計やコンテンツ制作のアプローチの著者であり、コーディングWebアクセシビリティ - WAI-ARIAで実現するマルチデバイス環境のWebアプリケーションの監訳者である太田良典さん（@bakera）と伊原力也さん（@magi1125）のお二人。
査読のきっかけ ある日、@magi1125さんがアクセシビリティコミュニティのSlackにて以下のような募集をされていました。
これからアクセシビリティやっていきの人に査読して欲しい、というもの。要するにユーザビリティテストの被験者のようなもの。 そこでまさにアクセシビリティこれからやって行く勢だった僕が立候補をさせていただきました。
不安だったのが僕が「フロントエンドがめちゃくちゃ強いわけじゃない」という部分で、そこについて尋ねたところ「まさしくそういう人もターゲットである」ということだったため安心しました。「ネタバレ歓迎」「ゲラを全部公開するとかでもない限りなんでもあり」とのことだったのでガンガン語ろうと思います。
どんな本？ まず ちょこっと紹介① 刊行によせて／日本語版の刊行によせて より抜粋します。
 本書の原著のタイトルは、&amp;ldquo;Inclusive Design Patterns&amp;quot;で、インクルーシブな「デザインパターン」を意味します。そして副題は &amp;ldquo;Coding Accessibility Into Web Design&amp;rdquo; となっており、これを見ていただけばわかるように、アクセシビリティに配慮したWebの実装方法を紹介する内容になっています。既存のWebアクセシビリティの書籍は、WCAG 2.0のガイドラインを紹介するものであったり、「こうするのはよくない」というアンチパターンを紹介するものが主流でした。もちろん、それらを知ることには大きな意味があります。しかし、現場の実装者が実際にどのようなマークアップをし、どのようにJavaScriptを実装するのがよいのか、具体的な実装例まで踏み込んで紹介する書籍はほとんどありませんでした。
 まさにこの本は、「現場の実装者が実際にどのようなマークアップをし、どのようにJavaScriptを実装するのがよいのか、具体的な実装例まで踏み込んで紹介する書籍」というわけです。もちろんそれだけではないのですが、まずはタイトルに含まれる「インクルーシブ」という単語についても紹介します。
インクルーシブ（Inclusive）とは?  全てを含んだ、包括的な、包含的な 一部の人の制限しない、開放的な、いろいろな人が参加できる exclusive (排他的) の反対語  この本では「誰でも受け入れる」「特定の人を除外しない」のような意味で利用されています。 インクルーシブの逆の「インクルーシブではない状態」とは、特定の状況に置かれた人には使えない状態のこと、つまり「人を選ぶデザインはインクルーシブではない」と言えます。
僕の以前のエントリー アクセシブルにするならSlideShareを選ぶべき？SlideShareへのアップロード方法 にて、アクセシブルとは？について自分の見解を述べました。
 僕は どのような条件であろうと誰しもが同じようにコンテンツにアクセスすることができること という認識をしている。僕にとって「障害者対応」という言葉は本質的ではなく、目が見えなかったとしても、耳が聞こえなかったとしても、テクノロジーを利用すれば健常者と同じようにコンテンツを参照できるのだから、当然そうあるべきである、というもの。（似て非なるもの、というか。やっていることは同じかもしれないが、捉え方の問題）
 この本で紹介されている「インクルーシブデザイン」とは、アクセシビリティをも包括的に含み、特定の誰かを排除することなく「ユーザー」と「ユーザーが使うもの」のすべてを視野に入れた総合的なデザインのことです。 この本は「インクルーシブな実装例」が紹介されていました。
「ダメ」ではなく「こうしよう！」 「アレはこういう理由でやってはいけません」と言われ「ではどうすればいいのか…」というような「そこからは放任」というケースは悲惨です。 しかしこの本は表紙にあるように、「ダメ」ではなく「こうしよう！」（そしてどういう理由・根拠で）を学ぶ本と言えます。 ただし、監訳者のひとり@bakeraさんのエントリーによれば
 なお、この本で語られている実装方法は、あくまで方法のひとつでしかないことに注意してください。他にもさまざまな方法がありますし、他の方法がダメだというわけではありません。さまざまな方法にはそれぞれ一長一短があり、原著者の主張する実装方法にも長所だけでなく短所があります。この本の実装方法をベースに、短所について議論していただいたり、より良い案を出していただくのも良いでしょう。「この方が良いのでは?」といった感想を持たれた方は、ぜひ共有いただき、議論を深めていただきたいと思います。
 「こうしよう！」という本書の提案も あくまで選択肢の一つである ということには注意です。</description>
    </item>
    
    <item>
      <title>アクセシブルにするならSlideShareを選ぶべき？SlideShareへのアップロード方法</title>
      <link>https://blog.orangebomb.org/blog/2017/07/19/slideshare/</link>
      <pubDate>Wed, 19 Jul 2017 05:34:18 +0900</pubDate>
      
      <guid>https://blog.orangebomb.org/blog/2017/07/19/slideshare/</guid>
      <description>Keynoteなどでスライドを作成し、スライドのSNSへアップロードし、シェアする。多くの人が行なっているこの行動、場合によってはスライドの中身にアクセスできないことがあるという事実を知った。そこで、そのようなことが起こらないようにアクセシブルなスライドにするにはどうすればよいのか？という部分に関し調査・検証を行なったので記録する。
 アクセシブルとは？ アクセシビリティと、スライドのアップロードに関する事情  SpeakerDeckでは情報（スライドの内容）にアクセスできない SlideShareの場合は中身を読みテキストとしてWebページ上に表示される   Keynoteで作ったスライドをSlideShareにアップロードする手順 Adobe Acrobut Pro を使わない場合 完璧は難しい。「割り切ること」も重要なこと 余談１.SlideShareにアップロードしたスライドを削除する方法 余談２.一応ある？SpeakerDeckのスライドをスクリーンリーダーで読む方法 所感 【7/20追記】Acrobutでのトリミングなしで済む方法  アクセシブルとは？ まずは「アクセシブル」という単語について。
 アクセシブルデザインは、高齢者・障害のある人々の利便性を配慮しつつ、健常者の利便性も確保することを目的として、従来の設計を高齢者や障害のある人々のニーズに合わせ拡張することによって、製品、サービス、建物などがそのまま利用できる潜在顧客数を最大限に増やすための設計ということができます。これにより、ビジネス拡大の効果を得ることが可能になりますが、ビジネスを最優先させるのではなく、高齢者や障害のある人々の利便性を高めることが主たるねらいです。 アクセシブルデザインは、ISOにおける ガイド71 の議論において、高齢者・障害のある人々が健常者と同様に社会システムにアクセスできる言葉として定義されています。
 出典：共用品推進機構 - アクセシブルデザイン関連JIS・基本規格
このように書かれることが多いが、僕は どのような条件であろうと誰しもが同じようにコンテンツにアクセスすることができること という認識をしている。僕にとって「障害者対応」という言葉は本質的ではなく、目が見えなかったとしても、耳が聞こえなかったとしても、テクノロジーを利用すれば健常者と同じようにコンテンツを参照できるのだから、当然そうあるべきである、というもの。（似て非なるもの、というか。やっていることは同じかもしれないが、捉え方の問題）
アクセシビリティと、スライドのアップロードに関する事情 ここからは、スライドとアクセシビリティの関係について。
（１）SpeakerDeckでは情報（スライドの内容）にアクセスできない 以前、スライドをSpeakerDeckにて公開した時に、スクリーンリーダーユーザーである @ma10 さんが以下のようなツイートをなされていた。
驚いていると、 @magi1125 さんからアドバイスのメッセージをいただいた。
 SpeakerDeckはスライドを画像として表示するのみである テキスト情報として内容にアクセスすることができない  なんてこった&amp;hellip;
（２）SlideShareの場合は中身を読みテキストとしてWebページ上に表示される SpeakerDeckに関しショックを受けたところで、「SlideShareならばその問題が起こらない」という情報も得た。
 文字を画像にしない等、適切な方法でSlideShareにアップロードすればスライド内のテキストを抜き出してくれるため、スクリーンリーダーユーザーでも内容を把握することができる スクリーンリーダーで読み上げることが可能＝視覚以外でアクセスが可能  しかし、SpeakerDeckだと起こる困ることは起こらなくても、SlideShareにはSlideShareならではの困ることがあるのであった。 僕はスライド作成にはKeynoteを使っている。困る問題とは、Keynoteバージョン6以降で生成したPDFをSlideShareにアップロードすると、作ったスライド上からテキスト部分がすべて表示されなくなってしまう、という問題だ。実際はそこにあるけどただ映らないのみ。スライド外にテキスト出力はされていた。 今回、どのようにすれば問題なくSlideShareにアップロードすることができるのかを調べた。
Keynoteで作ったスライドをSlideShareにアップロードする手順 そのうちSlideShare側がバグを解消してくれるのでは？という点に関して。KeynoteのスライドをSlideShareにアップロードすると日本語が表示されない問題 - Qiita / 公式の回答  によると、残念ながら前述の文字が消える問題を解決する対応は時間がかかるようで、こちら側が頑張らないといけない… @magi1125 さんがツイートしていた解決策をベースに進める。
この検証では以下のバージョンを使用する。
 Keynote バージョン7.</description>
    </item>
    
    <item>
      <title>目が見えない状態を想定したUI設計</title>
      <link>https://blog.orangebomb.org/blog/2016/11/29/web-accessibility/</link>
      <pubDate>Tue, 29 Nov 2016 13:51:11 +0900</pubDate>
      
      <guid>https://blog.orangebomb.org/blog/2016/11/29/web-accessibility/</guid>
      <description>視覚がない、弱い人はどのようにサイトを利用しているのか、使っているのはどんなインターフェイスなのか。ずっと気になっていたというのもあり、「目が見えない状態を想定したUI設計」という内容で、主催した勉強会 Design Casual Talks #1 で発表をしました。
インターフェイスとは目で見えるものだけではなく、音声だけで構成されるインターフェイスもある。では僕らがページを作るとき、具体的にどうすればいいのか？
出典・参考文献 すべて2016年9月時点（スライド作成時）の情報を参考にしました。
 視覚障害者 - Wikipedia 視覚障害とは - 公益財団法人 関西盲導犬協会 視覚障害とは - 高知県立盲学校 ２－１　視覚障害とは - 秋田県立視覚支援学校 厚生労働省 統計情報・白書 平成18年身体障害児・者実態調査結果 視覚障害者 全盲者と弱視者の割合 統計みたいなものが欲しい&amp;hellip; - Yahoo!知恵袋 WAI-ARIA の基礎知識 — Website Usability Info WAI-ARIA | HTMLリファレンス  まとめ終えて イベントを前に、とにかくアクセシビリティに関する多くの情報を得たくて、コーディングWebアクセシビリティを購入しチェックしました。買ってよかった。
スクリーンリーダーをどのように使っているのか、WAI-ARIAの具体的な実装はどのように進んでいくのか、まだまだわかっていないので今後も調査・学習を続けていきたい。</description>
    </item>
    
  </channel>
</rss>